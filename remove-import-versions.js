const fs = require("fs");
const path = require("path");

const EXTENSIONS = [".js", ".ts", ".jsx", ".tsx"];
const IGNORE_DIRS = ["node_modules", ".next", "dist", "build"];
const IGNORE_FILES = ["package.json", "package-lock.json", "yarn.lock"];

// –°—Ç—Ä–æ–≥–∞—è —Ä–µ–≥—É–ª—è—Ä–∫–∞: –∏—â–µ—Ç —Å—Ç—Ä–æ–∫–∏ `import ... from '...'` –∏ —É–¥–∞–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –≤–µ—Ä—Å–∏—é –ø–æ—Å–ª–µ @
const importRegex = /^(import\s.+?from\s+["'])(@?[^"'@]+(?:\/[^"'@]+)*?)@\d+(?:\.\d+)*(["'])/gm;
const sideEffectRegex = /^(import\s+["'])(@?[^"'@]+(?:\/[^"'@]+)*?)@\d+(?:\.\d+)*(["'])/gm;

function walk(dir, callback) {
  fs.readdirSync(dir, { withFileTypes: true }).forEach((entry) => {
    const fullPath = path.join(dir, entry.name);
    if (entry.isDirectory()) {
      if (!IGNORE_DIRS.includes(entry.name)) walk(fullPath, callback);
    } else if (
      EXTENSIONS.includes(path.extname(entry.name)) &&
      !IGNORE_FILES.includes(entry.name)
    ) {
      callback(fullPath);
    }
  });
}

function processFile(filePath) {
  const content = fs.readFileSync(filePath, "utf-8");

  const replaced = content
    .replace(importRegex, `$1$2$3`)        // –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç import ... from '...'
    .replace(sideEffectRegex, `$1$2$3`);  // –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç import '...'

  if (replaced !== content) {
    fs.writeFileSync(filePath, replaced, "utf-8");
    console.log(`üõ† –û–±–Ω–æ–≤–ª–µ–Ω: ${filePath}`);
  }
}

function run() {
  const rootDir = process.cwd();
  console.log(`üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞: ${rootDir}`);
  walk(rootDir, processFile);
  console.log("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ.");
}

run();
